<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2TextBox1.IconLeft" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        1wAAAdcBjJIIaAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAR7SURBVHhe7ZrP
        yxVVGMevpRlqkJD9B0VpQhs3kWBtq0UpEUhhi6IwkHYabayFulL7I4q21S4if9Am/IW6Si0pclXQD63c
        aN/P+D5wezgz85xzz729c70f+PDOOfPMM2eed2buzLl3tGDBguXIffKQvCZvZ3pL/i4fl4PloEwdXI7/
        yI1ykPwsOYinmlYevgib5eCwAyjBtv176e8gi1CjAI9JK8JN+aQcDDUKAIMtwiQFsPvH003rv0Xgctgk
        w9wj35RnJBW0gc1K47hMrcev5Th9nyB/yhAr5McylWRWGjkF4BmCItiZkDLEG5JgHipek2vlrMgaaAZZ
        ec9Kgl9tWrNlWRTArvkHm9Zo9I20BN7x09BO11RfrrXJyuuDrZ1y2gUo3R7Hx2F9vXAD9MHhjSvg93XX
        F6AW4byLAkgfHN7YsW7JHEr31Uc476QFWC95GPlJ2nYsH5Cs68Pva+b3AB6BfXB0Y569r0qL5/kbrf2D
        JKYLizUGUwBO9SuSuGNyi7x3SZbpY91l2XVZRPZVQjhvaQH2SWK+lBy0hz7WEbOXjhYi+yohnJeB+uDI
        xuckMfYqmoJ1xPCG2UZkXyWE85YW4IYkZk3TSsM6Yq43rTR+XzO/B5QUIPXJ0UZfnF8/iAKk7httEMP8
        PUVLEc2TSzjvSumDIxv/Konpmjvg7k/ML00rTWRfJYTzlhbglCTm+aaV5jlJzLdNK42f16vBVklOcvdS
        WoD3JTGX5AN0OPjvX5DEdH0M1vhmqE2eRnspLQAHzcETx8POC5LLAfnPn5es+052PQhF5vVyJRc5yd3L
        KmkbGr7dxqOSmVeL97LuETktbD+Gb4coLcBLcvw9oE3eB16U08D2Yfh2iNwC8BF4VFoMp/oeyZcQdgmw
        TJ/dA/CwbPsoLMVyG74dguskJ9FHknW89b0tKUgbPGPsljbpekTWxI/Tt0PkFGC7pJ+Df4aOIM9KKwKX
        Ti38OH07RLQAq+WPkv636MjkHcm23DdCd+cAfpy+HSJagFckfVzzXad9G1wOFyU5XqajAn6cvh2C/2wk
        0aeSPm5upbwryfFJ05ocP06Wee/IIloAPs7om+S3OE9IcjCTVAM/TpazC3C/TCUab8Nfkr6up7o+eHok
        B7lq4MfJ8tQKkOoroVYe8LlYXhTgzmKc6D0g1VdCrTzgc7GcXQAeT9nIJxpvQ6qvhFp5wOdiObsAYD8s
        MizxUDRY5okzG/udrv1A4qQc38Fy9oQEvoaj/X3TysS+xeH3QUNll+QYvmpamXDgbPyHJNEkn/WzhrG+
        Lhk7x7BThuj6HdC8yKXcSmqDebSV3oBCcvP+b+OY1o5z5vmz5u8z6T0+u2nUvuGVzPOH5u8zsJcufvna
        iv06dFvTqgcTLNF5/qz5+wyYgiN/19fyow8lQZ81rfniC8mx7W9aLTws7TJ4j445wb6y+00+REcXO6S9
        CH0umekd0kOQwZg57e0/zzGFZ58pAjcLNpwH+c9nT71vkB/I07Lru77lKmNm7Fzzvaf9ggV3JaPRv6el
        W48P3OC/AAAAAElFTkSuQmCC
</value>
  </data>
</root>